################################################################################
#    Copyright (c) 2012, KAIST.
#    All rights reserved.\n#
#    Use is subject to license terms.\n#
#    This distribution may include materials developed by third parties.
################################################################################
tests=new
COMPILER_TESTS_DIR=${JS_HOME}/tests/compiler_tests
compile
compile_out_WCIequals=\
\n\
var myfunction\n\
{\n\
  <>fun<>1 = <>Global<>toObject(Date)\n\
  <>arguments<>2 = []\n\
  <>proto<>3 = <>fun<>1["prototype"]\n\
  <>obj<>4 = {\n\
    [[Prototype]]=<>proto<>3\n\
  }\n\
  <>newObj<>5 = new <>fun<>1(<>obj<>4, <>arguments<>2)\n\
  <>cond<>6 = <>Global<>isObject(<>newObj<>5)\n\
  if(<>cond<>6)\n\
    <>Global<>ignore1 = <>newObj<>5\n\
  else\n\
    <>Global<>ignore1 = <>obj<>4\n\
  gCurrentTestStop = <>Global<>ignore1\n\
}\n\
{\n\
  <>obj<>7 = <>Global<>toObject(win)\n\
  <>fun<>8 = <>Global<>toObject(<>obj<>7["TestCase"])\n\
  <>obj<>9 = <>Global<>toObject(win)\n\
  <>temp<>10 = <>obj<>9["gTestFile"]\n\
  <>obj<>11 = <>Global<>toObject(win)\n\
  <>temp<>12 = <>obj<>11["summary"]\n\
  <>temp<>13 = "Unknown"\n\
  <>arguments<>14 = [<>temp<>10, <>temp<>12, <>temp<>13, ]\n\
  <>proto<>15 = <>fun<>8["prototype"]\n\
  <>obj<>16 = {\n\
    [[Prototype]]=<>proto<>15\n\
  }\n\
  <>newObj<>17 = new <>fun<>8(<>obj<>16, <>arguments<>14)\n\
  <>cond<>18 = <>Global<>isObject(<>newObj<>17)\n\
  if(<>cond<>18)\n\
    <>Global<>ignore2 = <>newObj<>17\n\
  else\n\
    <>Global<>ignore2 = <>obj<>16\n\
}\n\
{\n\
  <>fun<>19 = <>Global<>toObject(TypeError)\n\
  <>temp<>20 = "here"\n\
  <>arguments<>21 = [<>temp<>20, ]\n\
  <>proto<>22 = <>fun<>19["prototype"]\n\
  <>obj<>23 = {\n\
    [[Prototype]]=<>proto<>22\n\
  }\n\
  <>newObj<>24 = new <>fun<>19(<>obj<>23, <>arguments<>21)\n\
  <>cond<>25 = <>Global<>isObject(<>newObj<>24)\n\
  if(<>cond<>25)\n\
    <>new1<>26 = <>newObj<>24\n\
  else\n\
    <>new1<>26 = <>obj<>23\n\
  throw <>new1<>26\n\
}\n\
{\n\
  <>fun1<>27 = function <>funexpr@4:22-10:1<>28(this, <>arguments<>29) \n\
  {\n\
    {\n\
      <>obj<>30 = <>Global<>toObject(this)\n\
      <>Global<>ignore4 = function this.valueOf<>funexpr@6:18-9:3<>31(this, <>arguments<>32) \n\
      {\n\
        {\n\
          <>old<>33 = actual\n\
          actual = <>old<>33 + "this.valueOf called. "\n\
          <>Global<>ignore6 = <>old<>33 + "this.valueOf called. "\n\
        }\n\
      }\n\
      <>obj<>30["valueOf"] = <>Global<>ignore4\n\
    }\n\
  }\n\
  <>fun<>34 = <>Global<>toObject(<>fun1<>27)\n\
  <>arguments<>35 = []\n\
  <>proto<>36 = <>fun<>34["prototype"]\n\
  <>obj<>37 = {\n\
    [[Prototype]]=<>proto<>36\n\
  }\n\
  <>newObj<>38 = new <>fun<>34(<>obj<>37, <>arguments<>35)\n\
  <>cond<>39 = <>Global<>isObject(<>newObj<>38)\n\
  if(<>cond<>39)\n\
    <>Global<>ignore3 = <>newObj<>38\n\
  else\n\
    <>Global<>ignore3 = <>obj<>37\n\
  myfunction = <>Global<>ignore3\n\
}\n\
\n\
\n
compile_err_equals=
