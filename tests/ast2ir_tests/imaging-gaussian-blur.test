################################################################################
#    Copyright (c) 2012, KAIST.
#    All rights reserved.
#
#    Use is subject to license terms.
#
#    This distribution may include materials developed by third parties.
################################################################################
tests=imaging-gaussian-blur
AST2IR_TESTS_DIR=${JS_HOME}/tests/ast2ir_tests
compile
compile_out_WCIequals=\
function buildKernel(this, <>arguments<>1) \n\
{\n\
  var <>ss<>2\n\
  var <>factor<>3\n\
  var <>i<>4\n\
  var <>j<>5\n\
  var <>g<>6\n\
  {\n\
    {\n\
      <>ss<>2 = sigma * sigma\n\
    }\n\
  }\n\
  {\n\
    {\n\
      <>y<>7 = 2\n\
      <>obj<>8 = <>Global<>toObject(Math)\n\
      <>factor<>3 = <>y<>7 * <>obj<>8["PI"] * <>ss<>2\n\
    }\n\
  }\n\
  {\n\
    <>Global<>ignore3 = []\n\
    kernel = <>Global<>ignore3\n\
  }\n\
  {\n\
    <>obj<>9 = <>Global<>toObject(kernel)\n\
    <>temp<>10 = []\n\
    <>temp<>10 = <>temp<>10\n\
    <>arguments<>11 = [<>temp<>10, ]\n\
    <>fun<>12 = <>Global<>toObject(<>obj<>9["push"])\n\
    <>Global<>ignore4 = <>fun<>12(<>obj<>9, <>arguments<>11)\n\
  }\n\
  {\n\
    {\n\
      <>i<>4 = 0\n\
    }\n\
  }\n\
  <>break<>13 : {\n\
    {\n\
      <>continue<>14 : {\n\
        {\n\
          {\n\
            <>obj<>15 = <>Global<>toObject(Math)\n\
            <>temp<>16 = - <>i<>4 * <>i<>4 / 2 * <>ss<>2\n\
            <>arguments<>17 = [<>temp<>16, ]\n\
            <>fun<>18 = <>Global<>toObject(<>obj<>15["exp"])\n\
            <>y<>19 = <>fun<>18(<>obj<>15, <>arguments<>17)\n\
            <>g<>6 = <>y<>19 / <>factor<>3\n\
          }\n\
        }\n\
        if(<>g<>6 < 0.001)\n\
          break <>break<>13\n\
        {\n\
          <>obj<>20 = <>Global<>toObject(kernel)\n\
          <>obj<>21 = <>Global<>toObject(<>obj<>20[0])\n\
          <>temp<>22 = <>g<>6\n\
          <>arguments<>23 = [<>temp<>22, ]\n\
          <>fun<>24 = <>Global<>toObject(<>obj<>21["push"])\n\
          <>Global<>ignore7 = <>fun<>24(<>obj<>21, <>arguments<>23)\n\
        }\n\
        {\n\
          <>old<>25 = <>i<>4\n\
          <>new<>26 = <>Global<>toNumber(<>old<>25)\n\
          <>i<>4 = <>new<>26 + 1\n\
          <>Global<>ignore9 = <>new<>26 + 1\n\
        }\n\
      }\n\
      {\n\
        \n\
      }\n\
    }\n\
    while(<>i<>4 < 7)\n\
      {\n\
        <>continue<>14 : {\n\
          {\n\
            {\n\
              <>obj<>15 = <>Global<>toObject(Math)\n\
              <>temp<>16 = - <>i<>4 * <>i<>4 / 2 * <>ss<>2\n\
              <>arguments<>17 = [<>temp<>16, ]\n\
              <>fun<>18 = <>Global<>toObject(<>obj<>15["exp"])\n\
              <>y<>19 = <>fun<>18(<>obj<>15, <>arguments<>17)\n\
              <>g<>6 = <>y<>19 / <>factor<>3\n\
            }\n\
          }\n\
          if(<>g<>6 < 0.001)\n\
            break <>break<>13\n\
          {\n\
            <>obj<>20 = <>Global<>toObject(kernel)\n\
            <>obj<>21 = <>Global<>toObject(<>obj<>20[0])\n\
            <>temp<>22 = <>g<>6\n\
            <>arguments<>23 = [<>temp<>22, ]\n\
            <>fun<>24 = <>Global<>toObject(<>obj<>21["push"])\n\
            <>Global<>ignore7 = <>fun<>24(<>obj<>21, <>arguments<>23)\n\
          }\n\
          {\n\
            <>old<>25 = <>i<>4\n\
            <>new<>26 = <>Global<>toNumber(<>old<>25)\n\
            <>i<>4 = <>new<>26 + 1\n\
            <>Global<>ignore9 = <>new<>26 + 1\n\
          }\n\
        }\n\
        {\n\
          \n\
        }\n\
      }\n\
  }\n\
  kernelSize = <>i<>4\n\
  <>break<>27 : {\n\
    {\n\
      <>j<>5 = 1\n\
      <>Global<>ignore12 = 1\n\
    }\n\
    while(<>j<>5 < kernelSize)\n\
      {\n\
        <>continue<>28 : {\n\
          {\n\
            <>obj<>29 = <>Global<>toObject(kernel)\n\
            <>temp<>30 = []\n\
            <>temp<>30 = <>temp<>30\n\
            <>arguments<>31 = [<>temp<>30, ]\n\
            <>fun<>32 = <>Global<>toObject(<>obj<>29["push"])\n\
            <>Global<>ignore15 = <>fun<>32(<>obj<>29, <>arguments<>31)\n\
          }\n\
          <>break<>33 : {\n\
            {\n\
              <>i<>4 = 0\n\
              <>Global<>ignore17 = 0\n\
            }\n\
            while(<>i<>4 < kernelSize)\n\
              {\n\
                <>continue<>34 : {\n\
                  {\n\
                    {\n\
                      <>obj<>35 = <>Global<>toObject(Math)\n\
                      <>temp<>36 = - <>i<>4 * <>i<>4 + <>j<>5 * <>j<>5 / 2 * <>ss<>2\n\
                      <>arguments<>37 = [<>temp<>36, ]\n\
                      <>fun<>38 = <>Global<>toObject(<>obj<>35["exp"])\n\
                      <>y<>39 = <>fun<>38(<>obj<>35, <>arguments<>37)\n\
                      <>g<>6 = <>y<>39 / <>factor<>3\n\
                    }\n\
                  }\n\
                  {\n\
                    <>obj<>40 = <>Global<>toObject(kernel)\n\
                    <>obj<>41 = <>Global<>toObject(<>obj<>40[<>j<>5])\n\
                    <>temp<>42 = <>g<>6\n\
                    <>arguments<>43 = [<>temp<>42, ]\n\
                    <>fun<>44 = <>Global<>toObject(<>obj<>41["push"])\n\
                    <>Global<>ignore21 = <>fun<>44(<>obj<>41, <>arguments<>43)\n\
                  }\n\
                }\n\
                {\n\
                  <>old<>45 = <>i<>4\n\
                  <>new<>46 = <>Global<>toNumber(<>old<>45)\n\
                  <>i<>4 = <>new<>46 + 1\n\
                  <>Global<>ignore19 = <>new<>46 + 1\n\
                }\n\
              }\n\
          }\n\
        }\n\
        {\n\
          <>old<>47 = <>j<>5\n\
          <>new<>48 = <>Global<>toNumber(<>old<>47)\n\
          <>j<>5 = <>new<>48 + 1\n\
          <>Global<>ignore14 = <>new<>48 + 1\n\
        }\n\
      }\n\
  }\n\
  kernelSum = 0\n\
  <>break<>49 : {\n\
    {\n\
      <>j<>5 = 1 - kernelSize\n\
      <>Global<>ignore24 = 1 - kernelSize\n\
    }\n\
    while(<>j<>5 < kernelSize)\n\
      {\n\
        <>continue<>50 : <>break<>51 : {\n\
          {\n\
            <>i<>4 = 1 - kernelSize\n\
            <>Global<>ignore28 = 1 - kernelSize\n\
          }\n\
          while(<>i<>4 < kernelSize)\n\
            {\n\
              <>continue<>52 : {\n\
                <>old<>53 = kernelSum\n\
                <>obj<>54 = <>Global<>toObject(kernel)\n\
                <>obj<>55 = <>Global<>toObject(Math)\n\
                <>temp<>56 = <>j<>5\n\
                <>arguments<>57 = [<>temp<>56, ]\n\
                <>fun<>58 = <>Global<>toObject(<>obj<>55["abs"])\n\
                <>field1<>59 = <>fun<>58(<>obj<>55, <>arguments<>57)\n\
                <>obj<>60 = <>Global<>toObject(<>obj<>54[<>field1<>59])\n\
                <>obj<>61 = <>Global<>toObject(Math)\n\
                <>temp<>62 = <>i<>4\n\
                <>arguments<>63 = [<>temp<>62, ]\n\
                <>fun<>64 = <>Global<>toObject(<>obj<>61["abs"])\n\
                <>field1<>65 = <>fun<>64(<>obj<>61, <>arguments<>63)\n\
                kernelSum = <>old<>53 + <>obj<>60[<>field1<>65]\n\
                <>Global<>ignore32 = <>old<>53 + <>obj<>60[<>field1<>65]\n\
              }\n\
              {\n\
                <>old<>66 = <>i<>4\n\
                <>new<>67 = <>Global<>toNumber(<>old<>66)\n\
                <>i<>4 = <>new<>67 + 1\n\
                <>Global<>ignore30 = <>new<>67 + 1\n\
              }\n\
            }\n\
        }\n\
        {\n\
          <>old<>68 = <>j<>5\n\
          <>new<>69 = <>Global<>toNumber(<>old<>68)\n\
          <>j<>5 = <>new<>69 + 1\n\
          <>Global<>ignore26 = <>new<>69 + 1\n\
        }\n\
      }\n\
  }\n\
}\n\
function gaussianBlur(this, <>arguments<>70) \n\
{\n\
  var <>y<>71\n\
  var <>x<>72\n\
  var <>r<>73\n\
  var <>g<>74\n\
  var <>b<>75\n\
  var <>a<>76\n\
  var <>j<>77\n\
  var <>i<>78\n\
  {\n\
    {\n\
      {\n\
        <>y<>71 = 0\n\
      }\n\
    }\n\
    <>break<>79 : {\n\
      {\n\
        \n\
      }\n\
      while(<>y<>71 < height)\n\
        {\n\
          <>continue<>80 : {\n\
            {\n\
              {\n\
                <>x<>72 = 0\n\
              }\n\
            }\n\
            <>break<>81 : {\n\
              {\n\
                \n\
              }\n\
              while(<>x<>72 < width)\n\
                {\n\
                  <>continue<>82 : {\n\
                    {\n\
                      {\n\
                        <>r<>73 = 0\n\
                      }\n\
                      {\n\
                        <>g<>74 = 0\n\
                      }\n\
                      {\n\
                        <>b<>75 = 0\n\
                      }\n\
                      {\n\
                        <>a<>76 = 0\n\
                      }\n\
                    }\n\
                    {\n\
                      {\n\
                        {\n\
                          <>j<>77 = 1 - kernelSize\n\
                        }\n\
                      }\n\
                      <>break<>83 : {\n\
                        {\n\
                          \n\
                        }\n\
                        while(<>j<>77 < kernelSize)\n\
                          {\n\
                            <>continue<>84 : {\n\
                              {\n\
                                <>label2<>85 : {\n\
                                  <>label1<>86 : {\n\
                                    if(<>y<>71 + <>j<>77 < 0)\n\
                                      break <>label1<>86\n\
                                    if(<>y<>71 + <>j<>77 >= height)\n\
                                      break <>label1<>86\n\
                                    break <>label2<>85\n\
                                  }\n\
                                  break <>continue<>84\n\
                                }\n\
                              }\n\
                              {\n\
                                {\n\
                                  {\n\
                                    <>i<>78 = 1 - kernelSize\n\
                                  }\n\
                                }\n\
                                <>break<>87 : {\n\
                                  {\n\
                                    \n\
                                  }\n\
                                  while(<>i<>78 < kernelSize)\n\
                                    {\n\
                                      <>continue<>88 : {\n\
                                        {\n\
                                          <>label2<>89 : {\n\
                                            <>label1<>90 : {\n\
                                              if(<>x<>72 + <>i<>78 < 0)\n\
                                                break <>label1<>90\n\
                                              if(<>x<>72 + <>i<>78 >= width)\n\
                                                break <>label1<>90\n\
                                              break <>label2<>89\n\
                                            }\n\
                                            break <>continue<>88\n\
                                          }\n\
                                        }\n\
                                        {\n\
                                          <>old<>91 = <>r<>73\n\
                                          <>obj<>92 = <>Global<>toObject(squidImageData)\n\
                                          <>y<>93 = <>obj<>92[4 * <>y<>71 + <>j<>77 * width + <>x<>72 + <>i<>78 + 0]\n\
                                          <>obj<>94 = <>Global<>toObject(kernel)\n\
                                          <>obj<>95 = <>Global<>toObject(Math)\n\
                                          <>temp<>96 = <>j<>77\n\
                                          <>arguments<>97 = [<>temp<>96, ]\n\
                                          <>fun<>98 = <>Global<>toObject(<>obj<>95["abs"])\n\
                                          <>field1<>99 = <>fun<>98(<>obj<>95, <>arguments<>97)\n\
                                          <>obj<>100 = <>Global<>toObject(<>obj<>94[<>field1<>99])\n\
                                          <>obj<>101 = <>Global<>toObject(Math)\n\
                                          <>temp<>102 = <>i<>78\n\
                                          <>arguments<>103 = [<>temp<>102, ]\n\
                                          <>fun<>104 = <>Global<>toObject(<>obj<>101["abs"])\n\
                                          <>field1<>105 = <>fun<>104(<>obj<>101, <>arguments<>103)\n\
                                          <>r<>73 = <>old<>91 + <>y<>93 * <>obj<>100[<>field1<>105]\n\
                                          <>Global<>ignore50 = <>old<>91 + <>y<>93 * <>obj<>100[<>field1<>105]\n\
                                        }\n\
                                        {\n\
                                          <>old<>106 = <>g<>74\n\
                                          <>obj<>107 = <>Global<>toObject(squidImageData)\n\
                                          <>y<>108 = <>obj<>107[4 * <>y<>71 + <>j<>77 * width + <>x<>72 + <>i<>78 + 1]\n\
                                          <>obj<>109 = <>Global<>toObject(kernel)\n\
                                          <>obj<>110 = <>Global<>toObject(Math)\n\
                                          <>temp<>111 = <>j<>77\n\
                                          <>arguments<>112 = [<>temp<>111, ]\n\
                                          <>fun<>113 = <>Global<>toObject(<>obj<>110["abs"])\n\
                                          <>field1<>114 = <>fun<>113(<>obj<>110, <>arguments<>112)\n\
                                          <>obj<>115 = <>Global<>toObject(<>obj<>109[<>field1<>114])\n\
                                          <>obj<>116 = <>Global<>toObject(Math)\n\
                                          <>temp<>117 = <>i<>78\n\
                                          <>arguments<>118 = [<>temp<>117, ]\n\
                                          <>fun<>119 = <>Global<>toObject(<>obj<>116["abs"])\n\
                                          <>field1<>120 = <>fun<>119(<>obj<>116, <>arguments<>118)\n\
                                          <>g<>74 = <>old<>106 + <>y<>108 * <>obj<>115[<>field1<>120]\n\
                                          <>Global<>ignore52 = <>old<>106 + <>y<>108 * <>obj<>115[<>field1<>120]\n\
                                        }\n\
                                        {\n\
                                          <>old<>121 = <>b<>75\n\
                                          <>obj<>122 = <>Global<>toObject(squidImageData)\n\
                                          <>y<>123 = <>obj<>122[4 * <>y<>71 + <>j<>77 * width + <>x<>72 + <>i<>78 + 2]\n\
                                          <>obj<>124 = <>Global<>toObject(kernel)\n\
                                          <>obj<>125 = <>Global<>toObject(Math)\n\
                                          <>temp<>126 = <>j<>77\n\
                                          <>arguments<>127 = [<>temp<>126, ]\n\
                                          <>fun<>128 = <>Global<>toObject(<>obj<>125["abs"])\n\
                                          <>field1<>129 = <>fun<>128(<>obj<>125, <>arguments<>127)\n\
                                          <>obj<>130 = <>Global<>toObject(<>obj<>124[<>field1<>129])\n\
                                          <>obj<>131 = <>Global<>toObject(Math)\n\
                                          <>temp<>132 = <>i<>78\n\
                                          <>arguments<>133 = [<>temp<>132, ]\n\
                                          <>fun<>134 = <>Global<>toObject(<>obj<>131["abs"])\n\
                                          <>field1<>135 = <>fun<>134(<>obj<>131, <>arguments<>133)\n\
                                          <>b<>75 = <>old<>121 + <>y<>123 * <>obj<>130[<>field1<>135]\n\
                                          <>Global<>ignore54 = <>old<>121 + <>y<>123 * <>obj<>130[<>field1<>135]\n\
                                        }\n\
                                        {\n\
                                          <>old<>136 = <>a<>76\n\
                                          <>obj<>137 = <>Global<>toObject(squidImageData)\n\
                                          <>y<>138 = <>obj<>137[4 * <>y<>71 + <>j<>77 * width + <>x<>72 + <>i<>78 + 3]\n\
                                          <>obj<>139 = <>Global<>toObject(kernel)\n\
                                          <>obj<>140 = <>Global<>toObject(Math)\n\
                                          <>temp<>141 = <>j<>77\n\
                                          <>arguments<>142 = [<>temp<>141, ]\n\
                                          <>fun<>143 = <>Global<>toObject(<>obj<>140["abs"])\n\
                                          <>field1<>144 = <>fun<>143(<>obj<>140, <>arguments<>142)\n\
                                          <>obj<>145 = <>Global<>toObject(<>obj<>139[<>field1<>144])\n\
                                          <>obj<>146 = <>Global<>toObject(Math)\n\
                                          <>temp<>147 = <>i<>78\n\
                                          <>arguments<>148 = [<>temp<>147, ]\n\
                                          <>fun<>149 = <>Global<>toObject(<>obj<>146["abs"])\n\
                                          <>field1<>150 = <>fun<>149(<>obj<>146, <>arguments<>148)\n\
                                          <>a<>76 = <>old<>136 + <>y<>138 * <>obj<>145[<>field1<>150]\n\
                                          <>Global<>ignore56 = <>old<>136 + <>y<>138 * <>obj<>145[<>field1<>150]\n\
                                        }\n\
                                      }\n\
                                      {\n\
                                        <>old<>151 = <>i<>78\n\
                                        <>new<>152 = <>Global<>toNumber(<>old<>151)\n\
                                        <>i<>78 = <>new<>152 + 1\n\
                                        <>Global<>ignore48 = <>new<>152 + 1\n\
                                      }\n\
                                    }\n\
                                }\n\
                              }\n\
                            }\n\
                            {\n\
                              <>old<>153 = <>j<>77\n\
                              <>new<>154 = <>Global<>toNumber(<>old<>153)\n\
                              <>j<>77 = <>new<>154 + 1\n\
                              <>Global<>ignore45 = <>new<>154 + 1\n\
                            }\n\
                          }\n\
                      }\n\
                    }\n\
                    {\n\
                      <>obj<>155 = <>Global<>toObject(squidImageData)\n\
                      <>obj<>155[4 * <>y<>71 * width + <>x<>72 + 0] = <>r<>73 / kernelSum\n\
                    }\n\
                    {\n\
                      <>obj<>156 = <>Global<>toObject(squidImageData)\n\
                      <>obj<>156[4 * <>y<>71 * width + <>x<>72 + 1] = <>g<>74 / kernelSum\n\
                    }\n\
                    {\n\
                      <>obj<>157 = <>Global<>toObject(squidImageData)\n\
                      <>obj<>157[4 * <>y<>71 * width + <>x<>72 + 2] = <>b<>75 / kernelSum\n\
                    }\n\
                    {\n\
                      <>obj<>158 = <>Global<>toObject(squidImageData)\n\
                      <>obj<>158[4 * <>y<>71 * width + <>x<>72 + 3] = <>a<>76 / kernelSum\n\
                    }\n\
                  }\n\
                  {\n\
                    <>old<>159 = <>x<>72\n\
                    <>new<>160 = <>Global<>toNumber(<>old<>159)\n\
                    <>x<>72 = <>new<>160 + 1\n\
                    <>Global<>ignore38 = <>new<>160 + 1\n\
                  }\n\
                }\n\
            }\n\
          }\n\
          {\n\
            <>old<>161 = <>y<>71\n\
            <>new<>162 = <>Global<>toNumber(<>old<>161)\n\
            <>y<>71 = <>new<>162 + 1\n\
            <>Global<>ignore35 = <>new<>162 + 1\n\
          }\n\
        }\n\
    }\n\
  }\n\
  return squidImageData\n\
}\n\
var squidImageData\n\
var sigma\n\
var kernel\n\
var kernelSize\n\
var kernelSum\n\
var width\n\
var height\n\
{\n\
  {\n\
    <>Global<>ignore61 = [A LOT!!! 427200 elements are not printed here.]\n\
    squidImageData = <>Global<>ignore61\n\
  }\n\
}\n\
{\n\
  {\n\
    sigma = 10\n\
  }\n\
}\n\
{\n\
  <>obj<>163 = <>Global<>toObject(buildKernel)\n\
  <>arguments<>164 = []\n\
  <>fun<>165 = <>Global<>getBase(buildKernel)\n\
  <>Global<>ignore63 = <>obj<>163(<>fun<>165, <>arguments<>164)\n\
}\n\
{\n\
  {\n\
    width = 400\n\
  }\n\
  {\n\
    height = 267\n\
  }\n\
}\n\
{\n\
  <>obj<>166 = <>Global<>toObject(gaussianBlur)\n\
  <>arguments<>167 = []\n\
  <>fun<>168 = <>Global<>getBase(gaussianBlur)\n\
  <>Global<>ignore66 = <>obj<>166(<>fun<>168, <>arguments<>167)\n\
}\n\
\n\
\n
compile_err_equals=
