<?xml version="1.0"?>
<document>
  <properties>
    <author email="tom@infoether.com">Tom Copeland</author>
    <title>Suppressing warnings</title>
  </properties>

  <body>
   <section name="Suppressing warnings">
   	<p>PMD provides several methods by which Rule violations can be suppressed.
   	Follow these steps to help you determine which expression method works best
   	for you:</p>
		<ol>
		    <li>Is the thing you need to suppress universally appealing to other
		    users of PMD, or is it a false positive? Can you modify the Rule to
		    support this specific suppression via a configuration property, or to
		    fix the false positive?  If you can do this, then please do so, and
		    submit a patch back to the PMD project.  Since PMD is built by users
		    for users, your help would be greatly appreciated by everyone.  If you
		    cannot...</li>
		    <li>Can you use Annotations or the NOPMD marker to work around your
		    particular issue on a case by case basis?  If not...</li>
		    <li>Can a regular expression matching the violation message work
		    around your particular issue?  If not...</li>
		    <li>Can a XPath query on the violation node work around your particular
		    issue? If not...</li>
		    <li>Your last and final option is to see the first point about
		    changing the Rule, but you do not need to submit a patch back to the
		    PMD project.</li>
		</ol>
   	<p>If you need to modify the Rule, see <a href="howtowritearule.html">How to write a rule</a>.
   	Otherwise, the other suppression methods are explain in the following sections.</p>
   <subsection name="Annotations">
       <p>You can use a JDK 1.5 annotation to suppress PMD warnings, like this:</p>
<source>
// This will suppress all the PMD warnings in this class
@SuppressWarnings("PMD")
public class Bar {
 void bar() {
  int foo;
 }
}
</source>
       <p>Or you can suppress one rule with an annotation like this:</p>
<source>
// This will suppress UnusedLocalVariable warnings in this class
@SuppressWarnings("PMD.UnusedLocalVariable")
public class Bar {
 void bar() {
  int foo;
 }
}
</source>
       <p>PMD also obeys the JDK annotation @SuppressWarnings("unused"), which will apply to all rules in the unused ruleset</p>
<source>
// This will suppress UnusedLocalVariable and UnusedPrivateMethod warnings in this class
@SuppressWarnings("unused")
public class Bar {
 void bar() {
  int foo;
 }
 private void foobar(){}
}
</source>
   </subsection>

       <subsection name="NOPMD">
           <p>Alternatively, you can tell PMD to ignore a specific line by using the "NOPMD" marker, like this:</p>
<source>
public class Bar {
 // 'bar' is accessed by a native method, so we want to suppress warnings for it
 private int bar; //NOPMD
}
</source>
           <p>You can use whatever text string you want to suppress warnings, for example, here's
 how to use TURN_OFF_WARNINGS as the suppressor:</p>
<source>
$ cat Foo.java
public class Foo {
  void bar() {
    int x = 2; // TURN_OFF_WARNINGS
  }
}

$ ./pmd.sh Foo.java text unusedcode -excludemarker TURN_OFF_WARNINGS
No problems found!
UnusedLocalVariable rule violation suppressed by //NOPMD in /home/tom/pmd/pmd/bin/Foo.java
</source>
           
<p>Note that PMD expects the //NOPMD marker to be on the same line as the violation.  So, for
           example, if you want to suppress an "empty if statement" warning, you'll need to place it on
 the line containing the "if" keyword, e.g.:</p>
<source>
$ cat ~/tmp/Foo.java
public class Foo {
 void bar() {
  int x = 42;
  if (x &gt; 5) { // NOPMD
  }
 }
}
$ java net.sourceforge.pmd.PMD ~/tmp/Foo.java text basic
No problems found!
$
</source>

<p>A message placed after the NOPMD marker will get placed in the report, e.g.:</p>
<source>
public class Foo {
 void bar() {
  try {
    bar();
  } catch (FileNotFoundException e) {} // NOPMD - this surely will never happen
  }
 }
}
</source>
       </subsection>

   <subsection name="Violation Suppress Regex">
       <p>If a particular Rule does not provide a property to customize behavior
       sufficiently, you can fall back to using the global 'violationSuppressRegex'
       property.  This property defines a regular expression to match against the
       message of the violation.  If the regular expression matches,
       then the violation will be suppressed.</p>
       <p>When using a Rule reference in a RuleSet XML, you can customize the
       Rule by adding the 'violationSuppressRegex' property.  For example, to
       suppress reporting specifically named parameters which are unused:</p>
<source><![CDATA[
<rule ref="rulesets/unusedcode.xml/UnusedFormalParameter">
  <property name="violationSuppressRegex" value=".*'mySpecialParameterName'.*"/>
</rule>
]]></source>
		<p>Note for message based suppression to work, you must know who to write
		a regular expression that matches the message of violations you wish to
		suppress. Regular expressions are explained in the JavaDoc for standard
		Java class java.util.regex.Pattern.</p>
   </subsection>

   <subsection name="Violation Suppress XPath">
       <p>If a particular Rule does not provide a property to customize behavior
       sufficiently, you can fall back to using the global 'violationSuppressXPath'
       property.  This property defines an XPath query to be executed using the
       violation node as the starting point.  If the XPath query matches anything,
       then the violation will be suppressed.</p>
       <p>When using a Rule reference in a RuleSet XML, you can customize the
       Rule by adding the 'violationSuppressXPath' property.  For example, to
       suppress reporting specifically typed parameters which are unused:</p>
<source><![CDATA[
<rule ref="rulesets/unusedcode.xml/UnusedFormalParameter">
  <property name="violationSuppressXPath" value=".[typeof('java.lang.String')]"/>
</rule>
]]></source>
		<p>Note for XPath based suppression to work, you must know how to write
		an XPath query that matches the AST structure of the nodes of the
		violations you wish to suppress.  XPath queries are explained in
		<a href="xpathruletutorial.html">XPath Rule tutorial</a>.</p>
   </subsection>

     <p>Suggestions?  Comments?  Post them <a href="http://sourceforge.net/forum/forum.php?forum_id=188192">here</a>.  Thanks!</p>
   </section>
  </body>
</document>


