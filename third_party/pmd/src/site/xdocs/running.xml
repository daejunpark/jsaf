<?xml version="1.0"?>

<document>
  <properties>
    <author email="tom@infoether.com">Tom Copeland</author>
    <title>Running PMD</title>
  </properties>

  <body>
   <section name="Running PMD via command line">
   	<subsection name="Basic usage">
   		<ul>
    		<li><strong>Windows:</strong> Type &quot;pmd [filename|jar or zip file containing source code|directory] [report format] [ruleset file]&quot;, i.e:</li>
    		<br/>
    			<source>
C:\tmp\pmd-@VERSION@\pmd\bin&gt;pmd c:\data\pmd\pmd\test-data\Unused1.java xml rulesets/java/unusedcode.xml
&lt;?xml version="1.0"?&gt;&lt;pmd&gt;
&lt;file name="c:\data\pmd\pmd\test-data\Unused1.java"&gt;
&lt;violation line="5" rule="UnusedLocalVariable"&gt;
Avoid unused local variables such as 'fr'
&lt;/violation&gt;
&lt;/file&gt;&lt;/pmd&gt;

C:\tmp\pmd-@VERSION@\pmd\bin&gt;
				</source>
       <p>You can pass a file name, a directory name, or a jar or zip file name containing Java source code to PMD.</p>
       <p>Also, the PMD binary distribution includes the ruleset files
       inside the jar file - even though the "rulesets/java/unusedcode.xml" parameter
 above looks like a filesystem reference, it's really being used by a getResourceAsStream() call
 to load it out of the PMD jar file.  And the same applies to the example below.</p>

       <li>If you want to run PMD without the batch file, you can do a:</li>
       <source>
C:\tmp\pmd-@VERSION@\pmd&gt;java -Djava.ext.dirs=lib 
                     net.sourceforge.pmd.PMD
                     c:\j2sdk1.4.1_01\src\java\lang xml
                     rulesets/java/imports.xml
       </source>
		<br/>
		<li><strong>Linux:</strong> Type &quot;./run.sh pmd [filename|jar or zip file containing source code|directory] [report format] [ruleset file]&quot;, i.e:</li>
		<br/>
			<source>
/home/user/tmp/pmd-@VERSION@/pmd/bin&gt;./run.sh pmd /home/user/data/pmd/pmd/test-data/Unused1.java xml rulesets/java/unusedcode.xml
&lt;?xml version="1.0"?&gt;&lt;pmd&gt;
&lt;file name="/home/user/data/pmd/pmd/test-data/Unused1.java"&gt;
&lt;violation line="5" rule="UnusedLocalVariable"&gt;
Avoid unused local variables such as 'fr'
&lt;/violation&gt;
&lt;/file&gt;&lt;/pmd&gt;

/home/user/tmp/pmd-@VERSION@/pmd/bin&gt;
				</source>
        </ul>
    </subsection>
	<subsection name="Other options">
		<ul>
	    	<li>Notice that in this case the output is in XML, so you can redirect it to a file and optionally transform it via XSLT</li>
	        <li>You can also use shortened names to refer to the built-in rulesets, like this:</li>
				<source>
java net.sourceforge.pmd.PMD /path/to/source text java-basic,java-imports,java-unusedcode
       			</source>
       		<li>The command line interface also accepts the following optional arguments:</li>
         	<ul>
             <li><code>-version</code> - specify version of a language PMD should use (example: -version java 1.7 or -version cpp).</li>
             <li><code>-debug</code> - prints a stacktrace if an error is encountered</li>
             <li><code>-shortnames</code> - puts shortened names in the report.  This only works if the filename argument is a single directory</li>
             <li><code>-encoding Cp1252</code> - uses the specified encoding for reading the source code files</li>
             <li><code>-excludemarker NOPMDFORME</code> - uses the specified string of characters as the marker for PMD to ignore.  The default string is "NOPMD".</li>
             <li><code>-linkprefix</code> - path to HTML source, for summary html renderer only.</li>
             <li><code>-lineprefix</code> - custom anchor to affected line in the source file, for summary html renderer only.</li>
             <li><code>-minimumpriority</code> - The rule priority threshold; rules with lower priority than they will not be used.</li>
             <li><code>-xslt FILENAME</code> - This option overrides the default XSL stylesheet used by nicehtml renderer.</li>
        	</ul>
		</ul>
	</subsection>
	<subsection name="Renderers">
	<p>PMD comes with four different renderer types:
	<ul>
		<li><b>text</b>, provides a basic text output.</li>
		<li><b>xml</b>, provides report output in XML format.</li>
		<li><b>html</b>, provides report as a basic HTML page.</li>
		<li><b>nicehtml</b>, provides an enhanced HTML output page.
		As this feature use an XSLT transformation, it also possible to override the default stylesheet using the -xslt parameter.</li>
	</ul>
	</p>
	<p>Here is a simple example of 'nicehtml' feature usage:
				<source>
java net.sourceforge.pmd.PMD /path/to/source nicehtml java-basic,java-imports,java-unusedcode -xslt my-own-stylesheet.xsl
       			</source>
		<i>Note that the stylesheet should be a readable file for PMD.</i>
	</p>
	</subsection>
   </section>
  </body>
</document>




